spring:
  application:
    name: gpt_clone

  # PostgreSQL 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://postgres:5432/gpt_clone_dev
    username: postgres
    password: 3482
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis 설정
  data:
    redis:
      host: redis
      port: 6379
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # JPA 설정
  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC

  # 액추에이터 설정 (헬스체크용)
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        show-details: always

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: 86400000 # 24시간 (밀리초)
  refresh-expiration: 604800000 # 7일 (밀리초)

# AI 서비스 설정 (FastAPI)
ai:
  service:
    base-url: ${AI_SERVICE_BASE_URL:http://ai-service:8000}
    timeout: ${AI_SERVICE_TIMEOUT:30}
    
# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

# 로깅 설정
logging:
  level:
    com.clone.gpt: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" 